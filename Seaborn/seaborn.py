# -*- coding: utf-8 -*-
"""Seaborn.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1FOmdjbTICmQITs1x63-jnEg3v6_5AecZ
"""

import seaborn as sns
import matplotlib.pyplot as plt
import pandas as pd

# Generate data
stock_names = [f"Stock_{i+1}" for i in range(20)]
stock_prices = [round(100 + i * 10, 2) for i in range(20)]  # Example price logic

# Create DataFrame
stock_data = pd.DataFrame({
    "Stock": stock_names,
    "Price": stock_prices
})

plt.figure(figsize=(18, 6))
sns.lineplot(x='Stock', y='Price', data=stock_data)
plt.show()

# Create the DataFrame
tips = pd.DataFrame({
    "total_bill": [15.2, 20.3, 13.4, 23.8, 30.2, 10.4, 18.6, 25.3, 22.1, 19.0,
                   14.5, 28.7, 12.9, 16.8, 21.4, 26.5, 17.2, 29.8, 24.1, 20.6],
    "tip": [2.5, 3.0, 1.8, 3.5, 5.0, 1.5, 2.8, 4.0, 3.2, 2.7,
            2.0, 4.8, 1.9, 2.3, 3.5, 4.3, 2.6, 4.7, 3.9, 3.1],
    "day": ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun', 'Mon', 'Tue', 'Wed',
            'Thu', 'Fri', 'Sat', 'Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']
})


sns.scatterplot(x='total_bill', y='tip', data=tips)
plt.show()

sns.barplot(x='tip', y='total_bill', data=tips, color='purple')
plt.title('Bar Plot Example')
plt.show()

sns.histplot(tips['total_bill'], kde=True)
plt.show()

sns.boxplot(x='day', y='tip', data=tips, color='lightblue')
plt.title('Box Plot Example')
plt.show()

# Create the DataFrame with numeric columns
tips = pd.DataFrame({
    "total_bill": [15.2, 20.3, 13.4, 23.8, 30.2, 10.4, 18.6, 25.3, 22.1, 19.0,
                   14.5, 28.7, 12.9, 16.8, 21.4, 26.5, 17.2, 29.8, 24.1, 20.6],
    "tip": [2.5, 3.0, 1.8, 3.5, 5.0, 1.5, 2.8, 4.0, 3.2, 2.7,
            2.0, 4.8, 1.9, 2.3, 3.5, 4.3, 2.6, 4.7, 3.9, 3.1],
    "size": [2, 3, 2, 4, 5, 1, 2, 4, 3, 3,
             2, 5, 2, 2, 4, 5, 3, 5, 4, 3]
})

corr = tips.corr()
sns.heatmap(corr, annot=True, cmap='coolwarm')
plt.title('Heatmap Example')
plt.show()

sns.pairplot(tips)
plt.show()

tips = pd.DataFrame({
    "time": ['Lunch', 'Dinner', 'Lunch', 'Dinner', 'Dinner',
             'Lunch', 'Lunch', 'Dinner', 'Dinner', 'Lunch',
             'Dinner', 'Lunch', 'Lunch', 'Dinner', 'Dinner',
             'Lunch', 'Dinner', 'Lunch', 'Dinner', 'Lunch'],
    "tip": [2.5, 3.0, 1.8, 3.5, 5.0,
            1.5, 2.8, 4.0, 3.2, 2.7,
            2.0, 4.8, 1.9, 2.3, 3.5,
            4.3, 2.6, 4.7, 3.9, 3.1]
})

sns.violinplot(x='time', y='tip', data=tips)
plt.title('Violin Plot Example')
plt.show()

sns.countplot(x='tip', data=tips)
plt.show()

# Create the DataFrame with numeric columns
tips = pd.DataFrame({
    "total_bill": [15.2, 20.3, 13.4, 23.8, 30.2, 10.4, 18.6, 25.3, 22.1, 19.0,
                   14.5, 28.7, 12.9, 16.8, 21.4, 26.5, 17.2, 29.8, 24.1, 20.6],
    "tip": [2.5, 3.0, 1.8, 3.5, 5.0, 1.5, 2.8, 4.0, 3.2, 2.7,
            2.0, 4.8, 1.9, 2.3, 3.5, 4.3, 2.6, 4.7, 3.9, 3.1],
    "size": [2, 3, 2, 4, 5, 1, 2, 4, 3, 3,
             2, 5, 2, 2, 4, 5, 3, 5, 4, 3]
})

sns.kdeplot(tips['total_bill'], fill=True, color='orange')
plt.title('KDE Plot Example')
plt.show()

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

# Create the DataFrame
tips = pd.DataFrame({
    "total_bill": [15.2, 20.3, 13.4, 23.8, 30.2, 10.4, 18.6, 25.3, 22.1, 19.0,
                   14.5, 28.7, 12.9, 16.8, 21.4, 26.5, 17.2, 29.8, 24.1, 20.6],
    "tip": [2.5, 3.0, 1.8, 3.5, 5.0, 1.5, 2.8, 4.0, 3.2, 2.7,
            2.0, 4.8, 1.9, 2.3, 3.5, 4.3, 2.6, 4.7, 3.9, 3.1],
    "sex": ['Male', 'Female', 'Male', 'Female', 'Male',
            'Female', 'Male', 'Female', 'Male', 'Female',
            'Male', 'Female', 'Male', 'Female', 'Male',
            'Female', 'Male', 'Female', 'Male', 'Female'],
    "time": ['Lunch', 'Dinner', 'Lunch', 'Dinner', 'Dinner',
             'Lunch', 'Lunch', 'Dinner', 'Dinner', 'Lunch',
             'Dinner', 'Lunch', 'Lunch', 'Dinner', 'Dinner',
             'Lunch', 'Dinner', 'Lunch', 'Dinner', 'Lunch']
})

# Create FacetGrid
g = sns.FacetGrid(tips, col="time", row="sex")

# Map scatter plot to the grid
g.map(sns.scatterplot, 'total_bill', 'tip')

# Show plot
plt.show()

# Create the DataFrame
tips = pd.DataFrame({
    "total_bill": [15.2, 20.3, 13.4, 23.8, 30.2, 10.4, 18.6, 25.3, 22.1, 19.0,
                   14.5, 28.7, 12.9, 16.8, 21.4, 26.5, 17.2, 29.8, 24.1, 20.6],
    "tip": [2.5, 3.0, 1.8, 3.5, 5.0, 1.5, 2.8, 4.0, 3.2, 2.7,
            2.0, 4.8, 1.9, 2.3, 3.5, 4.3, 2.6, 4.7, 3.9, 3.1],
    "day": ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun', 'Mon', 'Tue', 'Wed',
            'Thu', 'Fri', 'Sat', 'Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']
})
sns.stripplot(x='day', y='total_bill', data=tips)
plt.show()

sns.jointplot(x='total_bill', y='tip', data=tips, kind='scatter')
plt.show()

sns.regplot(x='total_bill', y='tip', data=tips, color='magenta')
plt.title('Regression Plot Example')
plt.show()

sns.pointplot(x='day', y='total_bill', data=tips)
plt.show()

sns.swarmplot(x='day', y='total_bill', data=tips)
plt.show()

plt.subplot(1, 2, 1)
sns.boxplot(x='day', y='total_bill', data=tips)
plt.subplot(1, 2, 2)
sns.barplot(x='day', y='total_bill', data=tips)
plt.show()

sns.residplot(x='total_bill', y='tip', data=tips, lowess=True)
plt.show()

sns.jointplot(x='total_bill', y='tip', data=tips, kind='reg',)
plt.show()

